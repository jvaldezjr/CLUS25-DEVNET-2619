---
- name: Organization firmware upgrade
  hosts: meraki_servers
  gather_facts: false

  vars:
    test_org_id: "{{ lookup('env','MERAKI_ORG_ID') }}"
  tasks:
    # - name: Return identity of current API user
    #   cisco.meraki.administered_identities_me_info:
    #   register: current_user

    # - name: Gather Meraki Organizations
    #   cisco.meraki.organizations_info:
    #   register: org_response

    # - name: Store just the list of organizations
    #   ansible.builtin.set_fact:
    #     organizations: "{{ org_response.meraki_response }}"

    - name: Get networks in the organization
      cisco.meraki.networks_info:
        organizationId: "{{ test_org_id }}"
      register: org_networks

    - name: Show networks in the organization
      ansible.builtin.debug:
        var: org_networks

    - name: Get network firmware versions
      cisco.meraki.networks_firmware_upgrades_info:
        networkId: "{{ item.id }}"
      loop: "{{ org_networks.meraki_response }}"
      register: network_firmware_versions

    - name: Build firmware_by_network map (skip bad calls)
      ansible.builtin.set_fact:
        firmware_by_network: >-
          {{ dict(
               network_firmware_versions.results
                 | map(attribute='item.id')
                 | zip(
                     network_firmware_versions.results
                       | map(attribute='meraki_response')
                   )
             ) }}

    - name: Show network firmware versions
      ansible.builtin.debug:
        var: firmware_by_network
